---
import Section from "../Section.astro";
import { education, certificates } from "@cv";

// DÃ©finir directement la limite d'affichage ici
const CERTIFICATES_DISPLAY_LIMIT = 10;

// Trier les certificats par date
const sortedCertificates = certificates.sort((a, b) => 
  new Date(b.date).getTime() - new Date(a.date).getTime()
);

const [visibleCertificates, hiddenCertificates] = [
  sortedCertificates.slice(0, CERTIFICATES_DISPLAY_LIMIT),
  sortedCertificates.slice(CERTIFICATES_DISPLAY_LIMIT)
];
---

<Section className={Astro.props.className} title="Education">
	<ul class="space-y-4 py-3 print:space-y-0">
		{
			education.map(({ institution, startDate, endDate, area, url }) => {
				const startYear = new Date(startDate).getFullYear();
				const endYear = endDate != null ? new Date(endDate).getFullYear() : "Actual";
				const years = `${startYear} - ${endYear}`;

				return (
					<div class="flex items-baseline">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 hidden h-5 w-5 self-start md:inline-block print:hidden">
							<path d="M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z" />
							<path d="M22 10v6" />
							<path d="M6 12.5V16a6 3 0 0 0 12 0v-3.5" />
						</svg>
						<div class="relative w-full items-baseline justify-between gap-2">
							<h3 class="mr-6 items-baseline gap-x-2 gap-y-0.5 font-medium">
								<a target="_blank" class="hover:text-skin-hue group flex items-center gap-[6px] decoration-dotted underline-offset-[5px] hover:underline" href={url}>
									{institution}
								</a>
							</h3>
							<div class="text-sm text-skin-muted">{area}</div>
							<time class="right-0 top-0 text-xs text-skin-muted md:absolute md:block">{years}</time>
						</div>
					</div>
				);
			})
		}
	</ul>

	{
		certificates.length > 0 && (
			<>
				<h4>Certificates</h4>
				<ul class="space-y-4 py-3 print:space-y-0" id="certificatesList">
					{visibleCertificates.map(({ name, date, issuer, url }) => {
						const certificateYear = new Date(date).getFullYear();
						return (
							<div class="flex items-baseline certificate-item">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 hidden h-5 w-5 self-start md:inline-block print:hidden">
									<path d="M15 12h-5" />
									<path d="M15 8h-5" />
									<path d="M19 17V5a2 2 0 0 0-2-2H4" />
									<path d="M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3" />
								</svg>
								<div class="relative w-full items-baseline justify-between gap-2">
									<h3 class="mr-6 items-baseline gap-x-2 gap-y-0.5 font-medium">
										<a class="hover:text-skin-hue group flex items-center gap-[6px] text-skin-base decoration-dotted underline-offset-[5px] hover:underline" href={url} target="_blank">
											{name}
										</a>
									</h3>
									<div class="text-sm text-skin-muted">{issuer}</div>
									<time class="right-0 top-0 text-xs text-skin-muted md:absolute md:block">{certificateYear}</time>
								</div>
							</div>
						);
					})}
					
					{hiddenCertificates.map(({ name, date, issuer, url }) => {
						const certificateYear = new Date(date).getFullYear();
						return (
							<div class="flex items-baseline certificate-item hidden">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 hidden h-5 w-5 self-start md:inline-block print:hidden">
									<path d="M15 12h-5" />
									<path d="M15 8h-5" />
									<path d="M19 17V5a2 2 0 0 0-2-2H4" />
									<path d="M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3" />
								</svg>
								<div class="relative w-full items-baseline justify-between gap-2">
									<h3 class="mr-6 items-baseline gap-x-2 gap-y-0.5 font-medium">
										<a class="hover:text-skin-hue group flex items-center gap-[6px] text-skin-base decoration-dotted underline-offset-[5px] hover:underline" href={url} target="_blank">
											{name}
										</a>
									</h3>
									<div class="text-sm text-skin-muted">{issuer}</div>
									<time class="right-0 top-0 text-xs text-skin-muted md:absolute md:block">{certificateYear}</time>
								</div>
							</div>
						);
					})}
				</ul>

				{hiddenCertificates.length > 0 && (
						<button
							id="toggleCertificates"
							class="print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex"
						>
							<span id="toggleText">Voir plus</span>
							<svg
								class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out"
								id="toggleIcon"
								viewBox="0 0 24 24"
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
							>
								<polyline points="6 9 12 15 18 9"></polyline>
							</svg>
						</button>
					)}
			</>
		)
	}
</Section>

<script>
  const toggleBtn = document.getElementById('toggleCertificates');
  const toggleText = document.getElementById('toggleText');
  const toggleIcon = document.getElementById('toggleIcon');
  const hiddenItems = document.querySelectorAll('.certificate-item.hidden');
  let isExpanded = false;

  toggleBtn?.addEventListener('click', () => {
	isExpanded = !isExpanded;
	
	hiddenItems.forEach(item => {
	  item.classList.toggle('hidden');
	});

	if (toggleText) {
	  toggleText.textContent = isExpanded ? 'Voir moins' : 'Voir plus';
	}
	toggleIcon?.classList.toggle('rotate-180', isExpanded);
  });
</script>
