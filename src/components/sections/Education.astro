---
import Section from "../Section.astro";
import { education, certificates } from "@cv";

// Trier les certificats par date
const sortedCertificates = certificates.sort((a, b) => 
  new Date(b.date).getTime() - new Date(a.date).getTime()
);
---

<Section className={Astro.props.className} title="Education">
  <ul class="flex flex-col">
    {
      education.map(({ institution, startDate, endDate, area, url }) => {
        const startYear = new Date(startDate).getFullYear();
        const endYear = endDate != null ? new Date(endDate).getFullYear() : "Present";

        return (
          <li class="relative print:py-2">
            <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100">
              <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
                <time datetime={startDate}>{startYear}</time> - <time datetime={endDate}>{endYear}</time>
              </header>

              <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
                <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
                <h3>
                  <div class="inline-flex items-center text-lg print:text-base leading-tight">
                    <span>
                      {url ? (
                        <a class="text-skin-hue hover:underline" href={url} target="_blank">{institution}</a>
                      ) : (
                        <span>{institution}</span>
                      )}
                    </span>
                  </div>
                </h3>
                <div class="text-sm text-skin-muted">{area}</div>
              </div>
            </div>
          </li>
        );
      })
    }
  </ul>

  {certificates.length > 0 && (
    <div x-data="{ expanded: false }" class="mt-8">
      <h4 class="text-lg font-medium mb-4">Certificates</h4>
      <ul class="flex flex-col gap-4">
        {sortedCertificates.slice(0, 10).map(({ name, date, issuer, url }) => (
          <li class="relative">
            <div class="group relative grid pb-1 transition-all sm:grid-cols-12 sm:gap-8 md:gap-4">
              <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
                <time datetime={date}>{new Date(date).toLocaleDateString('fr-FR', { month: 'short', year: 'numeric' })}</time>
              </header>

              <div class="relative flex flex-col sm:col-span-10">
                <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
                <h3 class="text-base font-medium">
                  <a href={url} target="_blank" class="text-skin-base hover:text-skin-hue">
                    {name}
                  </a>
                </h3>
                <div class="text-sm text-skin-muted">{issuer}</div>
              </div>
            </div>
          </li>
        ))}

        <div x-show="expanded"
             x-transition:enter="transition ease-out duration-200"
             x-transition:enter-start="opacity-0 -translate-y-1"
             x-transition:enter-end="opacity-100 translate-y-0"
             class="flex flex-col gap-4">
          {sortedCertificates.slice(10).map(({ name, date, issuer, url }) => (
            <li class="relative">
              // ... mÃªme template que ci-dessus ...
            </li>
          ))}
        </div>
      </ul>

      {sortedCertificates.length > 10 && (
        <button @click="expanded = !expanded" 
                class="mt-4 print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex">
          <span x-text="expanded ? 'Show less' : 'Show more'"></span>
          <svg class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out"
               :class="{ 'rotate-180': expanded }"
               viewBox="0 0 24 24"
               xmlns="http://www.w3.org/2000/svg"
               fill="none"
               stroke="currentColor"
               stroke-width="2"
               stroke-linecap="round"
               stroke-linejoin="round">
            <polyline points="6 9 12 15 18 9"></polyline>
          </svg>
        </button>
      )}
    </div>
  )}
</Section>

<style>
  li::marker {
    @apply text-skin-hue
  }
</style>
